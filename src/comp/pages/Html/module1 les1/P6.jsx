import { Copy } from "../../../utils/Test";
import s from "../../StyleBox.module.scss";
import { data1, data2, data3, data4, data5, data6 } from "./data/P6";
import eth from "../../../../img/html/8.jpg";
import nine from "../../../../img/html/9.png";
import ten from "../../../../img/html/10.jpg";
import ele from "../../../../img/html/11.jpg";
import twe from "../../../../img/html/12.jpg";
import { HealthyBox } from "../../../utils/HealthyBox";

export const P6 = () => {
  return (
    <>
      <div className={s.boxInfo}>
        <h1>Изображения</h1>
        <p>
          Использование графики делает веб-страницы визуально привлекательнее.
          Изображения помогают лучше передать суть и содержание документа.{" "}
          <span className={s.textLink}>
            Тег <span className={s.tag}>&lt;img&gt;</span>
          </span>{" "}
          предназначен для разметки изображений в различных графических
          форматах.
        </p>
        <Copy text={data1} />
        <br />
        <ul>
          <li className={s.liMargin}>
            <span className={s.tag}>src="путь"</span> - обязательный атрибут,
            указывает адрес изображения. Путь к картинке может быть абсолютным
            или относительным.
          </li>
          <li className={s.liMargin}>
            <span className={s.tag}>alt="описание"</span> - обязательный
            атрибут, альтернативное описание.
          </li>
          <li className={s.liMargin}>
            <span className={s.tag}>width="значение"</span> и{" "}
            <span className={s.tag}>height="значение"</span> - задают размеры
            изображения в пикселях. Без задания размеров изображение
            отображается на странице в оригинальном размере. Если задать только
            одну величину, браузер автоматически вычислит другую для сохранения
            пропорций.
          </li>
        </ul>
        <h2>
          Атрибут <span className={s.tag}>alt</span>
        </h2>
        <p>
          Необходим для предоставления значимой информации для пользователей,
          которые не могут видеть изображение (слабовидящие), или если
          изображение не загрузилось. Альтернативный текст должен быть в каждом
          теге <span className={s.tag}>&lt;img&gt;</span>.
        </p>
        <ul>
          <li>
            В описании должно быть законченное, полностью сформированное
            предложение.
          </li>
          <li>
            Альтернативный текст должен отвечать на вопрос «Что изображено на
            картинке?».
          </li>
          <li>
            Описание должно быть уникальным и не повторять то, что уже есть в
            тексте к этому изображению.
          </li>
          <li>
            В описании не нужно использовать слова «изображение», «картинка» или
            «илюстрация», это само собой понятно.
          </li>
        </ul>
        <img src={eth} alt="" className={s.imgLess} />
        <p>
          Если в тексте страницы описывается история этих котят, достаточно
          будет следующего описания.
        </p>
        <Copy text={data2} />
        <br />
        <p>
          В случае когда у нас просто галерея изображений, без какого-то
          текстового описания, необходимо уточнить что именно изображено.
        </p>
        <Copy text={data3} />
        <br />
        <h2>Изображение-ссылка</h2>
        <p>
          Ссылка не обязательно должна быть с текстовыми контентом. Очень часто,
          особенно в интернет-магазинах, клик по изображению товара, в списке
          товаров, перенаправляет пользователя на страницу этого товара.
        </p>
        <p>
          Для создания изображения-ссылки оборачиваем тег{" "}
          <span className={s.tag}>&lt;img&gt;</span> в ссылку.
        </p>
        <Copy text={data4} />
        <br />
        <h2>Изображение с подписью</h2>
        <p>
          Такая задача часто встречается в статьях, где много изображений с
          пояснением под или над картинкой, например иллюстрации, графики или
          диаграммы. Если необходимо разметить изображение с подписью, можно
          использовать теги <span className={s.tag}>&lt;img&gt;</span> и абзац{" "}
          <span className={s.tag}>&lt;p&gt;</span>. Но, именно для таких задач,
          есть семантические теги <span className={s.tag}>&lt;figure&gt;</span>{" "}
          и <span className={s.tag}>&lt;figcaption&gt;</span>.
        </p>
        <Copy text={data5} />
        <h2>Абсолютные и относительные пути</h2>
        <p>
          Указывает точное местоположение файла в структуре папок на сервере.
          Абсолютный путь позволяет получить доступ к файлу со сторонних
          ресурсов.
        </p>
        <br />
        <Copy text="https://images.pexels.com/photos/583842/pexels-photo-583842.jpeg" />
        <p>
          Абсолютные адреса состоят минимум из трёх частей: протокол, имя
          сервера и путь к файлу.
        </p>
        <ul>
          <li className={s.liMargin}>
            <span className={s.tag}>https://</span> - протокол.
          </li>
          <li className={s.liMargin}>
            <span className={s.tag}>images.pexels.com</span> - имя сервера.
          </li>
          <li className={s.liMargin}>
            <span className={s.tag}>
              /photos/583842/pexels-photo-583842.jpeg
            </span>
            — путь к файлу изображения, где «photos» и «583842» имена папок.
            Папка «583842» вложена в «photos».
          </li>
        </ul>
        <h2>Относительный путь</h2>
        <p>
          Описывает путь к ресурсу относительно текущего файла. Используется для
          составления путей к изображениям, файлам стилей или создания навигации
          на другие страницы сайта, который вы создаёте.
        </p>
        <p>Возьмём стандартную структуру файлов и папок проекта.</p>
        <img src={nine} alt="" className={s.imgLess} />
        <p>
          Для того, чтобы в <span className={s.tag}>index.html</span>{" "}
          достучаться до изображения логотипа из папки{" "}
          <span className={s.tag}>images</span>, в атрибуте{" "}
          <span className={s.tag}>src</span> нужно указать относительный путь,
          то есть относительно HTML-документа.
        </p>
        <Copy text={data6} />
        <br />
        <p
          style={{
            lineHeight: "30px",
          }}
        >
          Символ <span className={s.tag}>/</span> обозначает переход на один
          уровень ниже. Такой путь браузер буквально понимает как: «В папке{" "}
          <span className={s.tag}>images</span>, на одном уровне с текущим
          файлом <span className={s.tag}>index.html</span>, взять файл{" "}
          <span className={s.tag}>logo.png</span>».
        </p>
        <p>
          В будущем необходимо будет подключать изображения в файле стилей. Для
          того, чтобы в файле <span className={s.tag}>styles.css</span>{" "}
          достучаться до изображения логотипа из папки{" "}
          <span className={s.tag}>images</span>, необходимо указать
          относительный путь (относительно файла-стилей).
        </p>
        <Copy text="background-image: url('../images/logo.png');" />
        <br />
        <p
          style={{
            lineHeight: "30px",
          }}
        >
          Последовательность символов <span className={s.tag}>../</span>{" "}
          обозначает переход на одну папку (уровень) выше. Такой путь браузер
          буквально понимает как: «Перейти на одну папку выше (назад), зайти в
          папку <span className={s.tag}>images</span> и взять в ней файл
          <span className={s.tag}>logo.png</span>».
        </p>
        <h2>Графические форматы</h2>
        <img src={ten} alt="" className={s.imgLess} />
        <br /> <br />
        <p>
          Векторная графика будет отображаться одинаково хорошо на обычных
          экранах и на экранах с высокой пиксельной плотностью. Растровая
          графика, особенно сжатая с потерей качества, будет выглядеть размыто.
        </p>
        <br />
        <h2>Растровая графика</h2>
        <p>
          <b>Растровая графика (raster, bitmap)</b> - описание графического
          файла в виде массива с координатами каждого пикселя и описанием цвета
          этого пикселя. Как карта цветов с фиксированным размером.
        </p>
        <p>Самые популярные растровые форматы изображений:</p>
        <ul>
          <li>
            <b>JPEG</b> - большие файлы не требующие прозрачного фона или
            анимации. Этот формат идеален для красочных фотореалистичных
            фотографий, так как они могут содержать миллионы цветов.
          </li>
          <li>
            <b>PNG</b> - в отличие от JPEG, имеет дополнительный параметр для
            описания прозрачности (альфа канал). Подходит для изображений, фон
            которых должен быть прозрачный или одноцветный. Используется для
            иконок и декоративных элементов. Также используется для изображений
            повышенной точности - скриншотов, чертежей, графиков и т. п.
          </li>
          <li>
            <b>webP</b> - формат заменяющий PNG и JPEG, но еще с неполной
            поддержкой в браузерах. При равном качестве изображения, сжатые
            файлы будут меньше PNG и JPEG в среднем на 25%.
          </li>
        </ul>
        <HealthyBox
          title="ПОЛЕЗНО"
          text="Отличить растровое изображение довольно просто, достаточно увеличить его масштаб. В определённый момент изображение начнёт размываться, и появятся квадраты (пикселизация)."
        />
        <br />
        <h2>Векторная графика</h2>
        <p>
          <b>Векторная графика (SVG, Scalable Vector Graphics)</b> - описывается
          в виде правил или уравнений, определяющих линии, а также
          дополнительные свойства, цвет линий и фон для фигур.
        </p>
        <p>
          Векторная графика идеально подходит для простых масштабируемых
          изображений, занимая очень мало места. Тем не менее, с ростом
          сложности изображения, размер файла делает использование формата SVG
          невыгодным. Векторная графика заменяет PNG и используется для иконок,
          логотипов, графиков, абстрактной графики и декоративных элементов.
        </p>
        <HealthyBox
          title="ВНИМАНИЕ"
          text="С векторной графикой будем детально знакомиться в отдельном занятии."
        />
        <h1>Оптимизация изображений</h1>
        <p>
          Изображения составляют около 90% общего веса ресурсов веб-сайта,
          поэтому их необходимо оптимизировать в первую очередь. В будущем
          оптимизацией ресурсов проекта будут заниматься специальные
          инструменты, которые сделают это автоматически. Но уже сейчас нужно
          думать об оптимизации веса страницы и использовать специальные
          онлайн-сервисы для сжатия изображений.
        </p>
        <ul>
          <li>
            <a
              href="https://squoosh.app/"
              className={s.textLink}
              target="_blank"
              rel="noopener noreferrer"
            >
              Squoosh для оптимизации растровой графики
            </a>
          </li>
          <li>
            <a
              href="https://jakearchibald.github.io/svgomg/"
              className={s.textLink}
              target="_blank"
              rel="noopener noreferrer"
            >
              SVGOMG для оптимизации векторной графики
            </a>
          </li>
        </ul>
        <p>
          Нужно помнить, что оптимизация JPEG-файла ведёт к потере качества
          изображения. Поэтому, при уменьшении веса изображения, ухудшится его
          внешний вид. Оптимизация JPEG сводится к поиску баланса между
          качеством и весом изображения.
        </p>
        <HealthyBox
          title="ВНИМАНИЕ"
          text="Оптимизация изображения делается один раз. Экспортированное из макета изображение оптимизируется и только после этого добавляется в проект."
        />
        <br />
        <h1>Прогрессивный JPEG</h1>
        <p>
          {" "}
          <b>Прогрессивные JPEG-изображения</b>- это файлы изображений в формате{" "}
          <span className={s.tag}>JPEG</span>, которые были закодированы таким
          образом, что при отображении они загружаются слоями. Прогрессивный
          JPEG выглядит точно так же, как и обычные JPEG-изображения. Разница в
          том, как они отображаются во время загрузки.
        </p>
        <p>
          Обычные JPEG-файлы загружаются и отрисовываются полосами (построчно),
          сверху вниз. Для пользователя это создаёт эффект плохой скорости
          загрузки страницы. Это особенно заметно для больших изображений или на
          мобильных устройствах с плохой скоростью подключения к сети.
        </p>
        <img src={ele} alt="" className={s.imgLess} />
        <p>
          Прогрессивный JPEG загружается так, что сразу показывается всё
          изображение, но в плохом качестве, и в процессе его загрузки качество
          постепенно улучшается до максимального.
        </p>
        <img src={twe} alt="" className={s.imgLess} />
        <p>
          С точки зрения пользователя, прогрессивный JPEG обеспечивает гораздо
          более приятный опыт посещения страницы. Пользователь сразу получает
          полное представление о содержимом страницы.
        </p>
        <h2>Создание</h2>
        <p>
          Для того, чтобы сделать прогрессивное JPEG-изображение достаточно
          воспользоваться специальными инструментами, в том числе онлайн.
          Например, при оптимизиации JPEG-изображений в{" "}
          <a
            href="https://squoosh.app/"
            className={s.textLink}
            target="_blank"
            rel="noopener noreferrer"
          >
            Squoosh
          </a>
          , они по умолчанию (автоматически) превращаются в прогрессивные.
        </p>
        <HealthyBox
          title="ИНТЕРЕСНО"
          text="Вес файла прогрессивного JPEG-изображения обычно немного меньше его базового JPEG-аналога."
        />
      </div>
    </>
  );
};
