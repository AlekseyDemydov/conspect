import { HealthyBox } from "../../../utils/HealthyBox";
import { Copy } from "../../../utils/Test";
import s from "../../StyleBox.module.scss";

import {
  data1,
  data10,
  data11,
  data2,
  data3,
  data4,
  data5,
  data6,
  data7,
  data8,
  data9,
} from "./data/P2";

export const P12 = () => {
  return (
    <>
      <div className={s.boxInfo}>
        <h1>Теги и атрибуты</h1>
        <br />

        <p>
          <b>Тег (tag)</b> — элемент языка разметки гипертекста. Это самые
          маленькие строительные блоки, из которых состоит любая веб-страница.
          Каждый тег обозначает какую-то сущность: заголовок, список, абзац
          текста, изображение.
        </p>
        <br />
        <p>
          Для выделения тегов среди текста документа используются угловые
          скобки, в которых указывается имя тега и его атрибуты.
        </p>
        <br />

        <Copy text={data1} />

        <br />

        <p>
          Открывающий тег указывает на то, где начинается элемент, закрывающий -
          где заканчивается. Закрывающий тег образуется путем добавления слэша
          (/) перед именем тега. Между открывающим и закрывающим тегами
          находится содержимое тега - контент.
        </p>
        <br />
        <p>Примеры тегов.</p>
        <br />

        <Copy text={data2} />

        <h1>Комментарии</h1>
        <br />
        <p>
          Комментарии используются для того, чтобы оставить в исходном коде
          пояснение, заметку, временно закомментировать участок кода и т. п.
        </p>
        <br />
        <Copy text={data3} />
        <br />
        <h1>Атрибуты</h1>
        <br />
        <p>
          Атрибуты это дополнительные настройки тегов, при помощи которых можно
          изменять свойства и поведение элемента. У каждого тега есть
          обязательные и необязательные атрибуты, их может быть несколько или не
          быть вовсе.
        </p>
        <br />
        <p>
          Атрибуты записываются внутри открывающего тега, а их значения
          располагаются внутри двойных кавычек. Несколько атрибутов разделяются
          пробелом.
        </p>
        <br />
        <Copy text={data4} />
        <br />
        <p>
          Рассмотрим некоторые атрибуты тега &nbsp;
          <span className={s.tag}>&lt;a&gt;</span>.
        </p>
        <br />
        <Copy text={data5} />
        <br />
        <ul>
          <li className={s.liMargin}>
            <span className={s.tag}>href</span> - адрес страницы, на которую
            перейдёт пользователь при нажатии на текст ссылки.
          </li>
          <li className={s.liMargin}>
            <span className={s.tag}>target</span> - указывает то, в какой
            вкладке откроется страница при клике по ссылке.
          </li>
          <li className={s.liMargin}>
            {" "}
            <span className={s.tag}>title</span> - добавляет всплывающую
            подсказку к тексту ссылки.
          </li>
        </ul>
        <br />
        <p>
          Рассмотрим некоторые атрибуты тега &nbsp;
          <span className={s.tag}>&lt;img&gt;</span>.
        </p>
        <br />
        <Copy text={data6} />
        <br />
        <ul>
          <li className={s.liMargin}>
            <span className={s.tag}>src</span> - адрес изображения.
          </li>
          <li className={s.liMargin}>
            <span className={s.tag}>alt</span> - альтернативный текст, который
            будет показан если картинка не загрузилась.
          </li>
        </ul>
        <br />
        <HealthyBox  title={'ВАЖНО'} 
          text={`Для того, чтобы узнать доступные атрибуты тега и их назначение, можно зайти в документацию или справочник, например`}
          link={`https://htmlreference.io/`}
        />
        <br />
        <h1>Парные теги</h1>
        <br />
        <p>
          Состоят из открывающего и закрывающего тега, которые оборачивают
          контент, позволяя изменять его свойства или отображение, группировать
          по смыслу. Внутри парных тегов могут быть вложены другие теги, как
          матрёшка.
        </p>
        <br />
        <Copy text={data7} />
        <br />
        <h1>Одиночные теги</h1>
        <br />
        <p>
          Состоят только из открывающего тега, не содержат текстового контента и
          получают контент или поведение из атрибутов. Служат для изменения
          свойств документа, подключения файлов и т. д.
        </p>
        <br />
        <Copy text={data8} />
        <br />
        <h1>Вложенность тегов</h1>
        <br />
        <p>
          Придерживаясь некоторых правил, теги можно вкладывать друг в друга.
          При вложении следует соблюдать порядок их закрытия по принципу
          матрёшки.
        </p>
        <br />
        <Copy text={data9} />
        <br />
        <p>
          Вот валидная разметка абзаца со ссылкой и выделенным текстом, а также
          списка преимуществ с описанием.
        </p>
        <br />
        <Copy text={data10} />
        <br />
        <p>А в этой версии есть проблемы (строки подсвечены).</p>
        <br />
        <Copy text={data11} />
        <br />
        <h1>Спецификация HTML</h1>
        <br />
        <p>
          Спецификация{" "}
          <a
            href="https://html.spec.whatwg.org/multipage/"
            className={s.textLink}
            target="_blank"
            rel="noopener noreferrer"
          >
            HTML Living Standard
          </a>{" "}
          - главный документ, описывающий стандарты, возможности и будущее
          развитие языка HTML.
        </p>
        <br />
        <p>
          Для изучения вёрстки, в первую очередь, важны разделы описывающие
          какие есть типы элементов, что обозначает каждый из них , и понимание
          того как их можно вкладывать друг в друга.
        </p>
        <br />
        <HealthyBox title={'ВАЖНО'} 
          text={`HTML-элемент - это термин, описывающий некую семантическую сущность в стандарте HTML. Например абзац, заголовок, список или ссылку. В HTML-документе элемент представлен тегом (парным или одиночным) - синтаксической конструкцией языка HTML.`}
          link=""
        />
        <br />
        <h1>Вложенность тегов</h1>
        <br />
        <p>Алгоритм определения возможности вложения тега довольно прост.</p>
        <br />
        <ul>
          <li>
            Идем в{" "}
            <a
              href="https://html.spec.whatwg.org/multipage/"
              className={s.textLink}
              target="_blank"
              rel="noopener noreferrer"
            >
              спецификацию
            </a>{" "}
            и находим нужный элемент.
          </li>
          <li>
            Проверяем контентную модель элемента (Content model), в который
            вкладываем.
          </li>
          <li>
            Проверяем категории элемента (Categories), который вкладываем.
          </li>
          <li>
            Если категория подходит и ограничения не запрещают, то вкладывать
            можно, иначе нельзя.
          </li>
        </ul>
        <br />
        <p>
          Уже через пару дней использования HTML вы привыкнете правильно
          вкладывать элементы друг в друга, так как правила вложенности станут
          интуитивно понятны после знакомства с основными тегами.
        </p>
        <br />
        <h1>Справочники</h1>
        <br />
        <p>
          Кроме спецификации под рукой полезно иметь справочники и шпаргалки.
          Помнить всё наизусть не нужно, более специфические или редко
          используемые вещи всегда можно подсмотреть.
        </p>
        <ul>
          <br />
          <li>
            <a
              href="https://htmlreference.io/"
              className={s.textLink}
              target="_blank"
              rel="noopener noreferrer"
            >
              Справочник HTML-тегов
            </a>
          </li>
          <li>
            <a
              href="https://cssreference.io/"
              className={s.textLink}
              target="_blank"
              rel="noopener noreferrer"
            >
              Справочник CSS-свойств
            </a>
          </li>
        </ul>
      </div>
    </>
  );
};
